version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # Bases de datos
  postgres-auth:
    image: postgres:15
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_PASSWORD: vacalola
    ports:
      - "5432:5432"
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data

  postgres-questions:
    image: postgres:15
    environment:
      POSTGRES_DB: questions_db
      POSTGRES_PASSWORD: vacalola
    ports:
      - "5433:5432"
    volumes:
      - postgres-questions-data:/var/lib/postgresql/data

  postgres-ia:
    image: postgres:15
    environment:
      POSTGRES_DB: ia_db
      POSTGRES_PASSWORD: vacalola
    ports:
      - "5434:5432"
    volumes:
      - postgres-ia-data:/var/lib/postgresql/data

  # Servicios de descubrimiento y gateway
  eureka-server:
    image: bulan506/eureka:latest
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  gateway:
    image: bulan506/gateway:latest
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      ALLOWED_ORIGINS: http://localhost:5173
      JWT_SECRET: ${GATEWAY_JWT_SECRET}

  # Microservicios
  authentication-service:
    image: bulan506/authentication-service:latest
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/auth_db
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_REDIS_HOST: redis

  question-service:
    image: bulan506/question-service:latest
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-questions:5432/questions_db
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  ia-service:
    image: bulan506/ia-service:latest
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-ia:5432/ia_db
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  email-service:
    image: bulan506/email-service:latest
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SENDGRID_PASSWORD: ${SENDGRID_API_KEY}

volumes:
  postgres-auth-data:
  postgres-questions-data:
  postgres-ia-data:

networks:
  default:
    driver: bridge